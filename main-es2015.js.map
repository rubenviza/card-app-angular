{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/services/people.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Person } from './models/person';\r\nimport { ResultSet } from './models/result-set';\r\nimport { PeopleService } from './services/people.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = \"Cards App\";\r\n/* // Funciona para llamar *ngFor en el html asi .... (observpeople | async).data\r\n  observpeople:Observable<ResultSet<Person>>;\r\n  constructor(private peopleservice:PeopleService){\r\n    this.observpeople = peopleservice.getPeople();\r\n  }\r\n*/\r\n  observpeople:Observable<Array<Person>>;\r\n\r\n  constructor(private peopleservice:PeopleService){\r\n    this.observpeople = peopleservice.getPeople().pipe(\r\n          map((info) => {\r\n            return info.data;\r\n          }),\r\n          catchError((error, caught) => {\r\n            return [];\r\n          })\r\n      );\r\n  }\r\n}\r\n","<h1 class=\"title\">{{ title }}</h1>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n  <!-- <div class=\"col-md-4\" style=\"padding: 10px;\" *ngFor=\"let item of (observpeople | async).data\"></div>  -->\r\n    <div class=\"col-md-4\" style=\"padding: 10px;\" *ngFor=\"let item of observpeople | async\">\r\n      <app-card [person]=\"item\"></app-card>\r\n    </div>\r\n  </div>\r\n</div>","import { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CardComponent } from './components/card/card.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Person } from 'src/app/models/person';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input() person:Person;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <img class=\"avatar\" src=\"{{ person.avatar }}\" alt=\"{{ person.first_name + ' ' + person.last_name}}\" />\r\n    <h1>{{ person.first_name +\" \"+ person.last_name }}</h1>\r\n    <p class=\"email\">{{ person.email }}</p>\r\n    <p>Last update: {{ person.last_update }}</p>\r\n    <div class=\"footer\"><button>Save as Favourite</button>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { peopleMockData } from '../mocks/mock-data';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { ResultSet } from '../models/result-set';\r\nimport { Person } from '../models/person';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PeopleService {\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  //TODO: implement using \"https://reqres.in/api/users\"\r\n  getPeople(): Observable<ResultSet<Person>> {\r\n    return this.http.get<ResultSet<Person>>(\"https://reqres.in/api/users\");    // con data de API\r\n    //return of(peopleMockData);   // con data en mock.data.ts\r\n    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}